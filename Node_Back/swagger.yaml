openapi: 3.0.0
info:
  title: User API
  version: 1.0.0
paths:
  /api/register:
    post:
      summary: Register a new member
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                id:
                  type: string
                pwd:
                  type: string
                pwd_confirm:
                  type: string
      responses:
        '200':
          description: Successful registration
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: "ok"
                  user:
                    type: object
                    properties:
                      name:
                        type: string
                      id:
                        type: string
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: "error"
                  message:
                    type: string
                    example: "이미 존재하는 아이디입니다."
        '500':
          description: Database error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: "error"
                  message:
                    type: string
                    example: "Database error"

  /api/login:
    post:
      summary: Log in an existing member
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                pwd:
                  type: string
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: "ok"
                  user:
                    type: object
                    properties:
                      name:
                        type: string
                      id:
                        type: string
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        '400':
          description: Invalid ID or password
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: "error"
                  message:
                    type: string
                    example: "아이디 또는 비밀번호가 일치하지 않습니다."
        '500':
          description: Database error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: "error"
                  message:
                    type: string
                    example: "Database error"

  /api/update-password:
    post:
      summary: Update password for logged-in user
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pwd:
                  type: string
                  description: "New password"
                pwd_confirm:
                  type: string
                  description: "Confirm new password"
      responses:
        '200':
          description: Password updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: "ok"
                  message:
                    type: string
                    example: "비밀번호가 성공적으로 변경되었습니다."
        '400':
          description: Password mismatch or missing token
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: "error"
                  message:
                    type: string
                    example: "비밀번호가 일치하지 않습니다."
        '500':
          description: Database error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: "error"
                  message:
                    type: string
                    example: "Database error"

  /api/delete-account:
    post:
      summary: Delete account for logged-in user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Account deletion successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: "ok"
                  message:
                    type: string
                    example: "회원 탈퇴가 완료되었습니다."
        '401':
          description: Unauthorized - Token missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: "error"
                  message:
                    type: string
                    example: "유효하지 않은 토큰입니다."
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: "error"
                  message:
                    type: string
                    example: "회원 탈퇴 중 오류가 발생했습니다."

  /api/planner:
    get:
     summary: Get monthly planner entries
     security:
       - bearerAuth: []
     parameters:
       - in: query
         name: year
         required: true
         schema:
           type: string
         description: Year to fetch planners for (e.g. 2024)
       - in: query
         name: month
         required: true
         schema:
           type: string
         description: Month to fetch planners for (01-12)
     responses:
       '200':
         description: Successfully retrieved planner entries
         content:
           application/json:
             schema:
               type: object
               properties:
                 result:
                   type: string
                   example: "ok"
                 tasks:
                   type: array
                   items:
                     type: object
                     properties:
                       id:
                         type: integer
                         example: 1
                       content:
                         type: string
                         example: "팀 미팅"
                       date:
                         type: string
                         example: "2024-11-15"
                       completed:
                         type: boolean
                         example: false
       '400':
         description: Invalid request parameters
         content:
           application/json:
             schema:
               type: object
               properties:
                 result:
                   type: string
                   example: "error"
                 message:
                   type: string
                   example: "년도와 월을 지정해주세요."
       '401':
         description: Unauthorized access
         content:
           application/json:
             schema:
               type: object
               properties:
                 result:
                   type: string
                   example: "error"
                 message:
                   type: string
                   example: "토큰이 제공되지 않았습니다."
       '500':
         description: Server error while fetching planner entries
         content:
           application/json:
             schema:
               type: object
               properties:
                 result:
                   type: string
                   example: "error"
                 message:
                   type: string
                   example: "Planner 조회 중 오류가 발생했습니다."
    post:
      summary: Save planner content and date
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: Planner content to save
                date:
                  type: string
                  format: date
                  description: Date the content was written
      responses:
        '201':
          description: Planner content saved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: "ok"
                  message:
                    type: string
                    example: "Planner 내용이 성공적으로 저장되었습니다."
                  data:
                    type: object
                    properties:
                      user_id:
                        type: string
                        example: "user123"
                      content:
                        type: string
                        example: "Meeting with the team"
                      date:
                        type: string
                        example: "2024-11-11"
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: "error"
                  message:
                    type: string
                    example: "토큰이 제공되지 않았습니다."
        '500':
          description: Error saving planner content
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: "error"
                  message:
                    type: string
                    example: "Planner 저장 중 오류가 발생했습니다."
   

  /api/planner/{plannerId}:
    put:
      summary: Update planner content and date for the user
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: plannerId
          required: true
          schema:
            type: integer
          description: ID of the planner entry to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: Planner content to update
                date:
                  type: string
                  format: date
                  description: Date the content was written
      responses:
        '200':
          description: Planner content updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: "ok"
                  message:
                    type: string
                    example: "Planner 내용이 성공적으로 수정되었습니다."
        '404':
          description: Planner entry not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: "error"
                  message:
                    type: string
                    example: "플래너 항목을 찾을 수 없습니다."
        '500':
          description: Error updating planner content
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: "error"
                  message:
                    type: string
                    example: "Planner 수정 중 오류가 발생했습니다."

    delete:
      summary: Delete planner entry
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: plannerId
          required: true
          schema:
            type: integer
          description: ID of the planner entry to delete
      responses:
        '200':
          description: Planner entry deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: "ok"
                  message:
                    type: string
                    example: "플래너 내용이 성공적으로 삭제되었습니다."
        '404':
          description: Planner entry not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: "error"
                  message:
                    type: string
                    example: "플래너 항목을 찾을 수 없습니다."
        '500':
          description: Error deleting planner entry
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: "error"
                  message:
                    type: string
                    example: "플래너 삭제 중 오류가 발생했습니다."

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
